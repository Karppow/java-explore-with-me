{
	"info": {
		"_postman_id": "01d31af8-ea7f-4977-84c4-c70ac30633c2",
		"name": "feature_comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43585752",
		"_collection_link": "https://ilnarsafiullin.postman.co/workspace/Ilnar-Safiullin's-Workspace~b6bef720-598d-4a5f-85ba-376f9adf6461/collection/43585752-01d31af8-ea7f-4977-84c4-c70ac30633c2?action=share&source=collection_link&creator=43585752"
	},
	"item": [
		{
			"name": "Добавление пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    if (pm.response.code === 201) {\r",
							"        const responseJson = pm.response.json();\r",
							"        pm.expect(responseJson).to.have.property('id');\r",
							"        pm.environment.set(\"userId\", responseJson.id);\r",
							"        console.log(\"User ID сохранен:\", responseJson.id);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false,
				"removeRefererHeaderOnRedirect": false,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"disableCookies": false,
				"tlsPreferServerCiphers": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"user31\",\r\n  \"email\": \"use21r@e31mail.ru\"\r\n}"
				},
				"url": {
					"raw": "{{baseURL}}/admin/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление Категории",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Категория успешно создана\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    if (pm.response.code === 201) {\r",
							"        pm.environment.set(\"categoryId\", responseJson.id);\r",
							"    }\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Концерты\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/admin/categories",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание События",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Создание события\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('id');\r",
							"    if (pm.response.code === 201) {\r",
							"        pm.environment.set(\"eventId\", responseJson.id);\r",
							"    }\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"annotationdasdasdsadasdasdascsdacdscsdcsdcsdcds\",\r\n    \"category\": {{categoryId}},\r\n    \"description\": \"descriptiofdsfsdcsdcsdcascasdcsdan\",\r\n    \"eventDate\": \"2026-08-25 22:00:00\",\r\n    \"location\": {\r\n        \"lat\": 10.000,\r\n        \"lon\": 20.000\r\n    },\r\n    \"paid\": false,\r\n    \"participantLimit\": 10,\r\n    \"requestModeration\": true,\r\n    \"title\": \"Tittle\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/events",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Подтверждение события админом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Событие опубликовано\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.state).to.eql(\"PUBLISHED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/admin/events/{{eventId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"events",
						"{{eventId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить комментарий",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Текст комментария соответствует запросу\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.description).to.eql(\"тиекст комментария\");\r",
							"    if (pm.response.code === 200) {\r",
							"        const responseJson = pm.response.json();\r",
							"        pm.environment.set(\"commentId\", responseJson.id);\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"тиекст комментария\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/comments?eventId={{eventId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "{{eventId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение комментарий пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Длина массива больше 0\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.be.greaterThan(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Comment имеет все поля\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    if (responseJson.length > 0) {\r",
							"        const comment = responseJson[0];\r",
							"        pm.expect(comment).to.have.property('id');\r",
							"        pm.expect(comment).to.have.property('description');\r",
							"        pm.expect(comment).to.have.property('authorId');\r",
							"        pm.expect(comment).to.have.property('eventId');\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Текст обновлен\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.description).to.eql(\"Новый текст\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Новый текст\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/comments/{{commentId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"comments",
						"{{commentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка получение комментариев при запросе Евента",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Ответ содержит количество комментариев\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseJson).to.have.property('comments');\r",
							"    pm.expect(responseJson.comments).to.not.be.null;\r",
							"    pm.expect(responseJson.comments).to.be.a('number');\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/events/{{eventId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"events",
						"{{eventId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление Евента Админом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/admin/comments/{{commentId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"comments",
						"{{commentId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:8080"
		}
	]
}